{
  "stats": {
    "suites": 1,
    "tests": 108,
    "passes": 105,
    "pending": 0,
    "failures": 3,
    "start": "2025-01-24T00:35:06.850Z",
    "end": "2025-01-24T00:46:25.584Z",
    "duration": 678734,
    "testsRegistered": 108,
    "passPercent": 97.22222222222221,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a119a498-7337-416a-be6e-505dfec4a468",
      "title": "",
      "fullFile": "cypress\\e2e\\MetersAndGroup\\submit_positive_case.cy.js",
      "file": "cypress\\e2e\\MetersAndGroup\\submit_positive_case.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1e745839-b999-45f6-a895-5905af80354f",
          "title": "Meters & Group Module New Meter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should allow users to fill out (Gauge,ACTUAL,SEARCHTYPE,B34) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Gauge,ACTUAL,SEARCHTYPE,B34) and submit the New Meter",
              "timedOut": null,
              "duration": 6636,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Gauge');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SEARCHTYPE');\nselectDropdownOption('unitOfMeasure', 'B34');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type(meterName, {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "0c78b16a-fe70-4f4c-8557-ffb498cd2eba",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 5961,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Gauge');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SEARCHTYPE');\nselectDropdownOption('unitOfMeasure', 'B34');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "014029f6-762d-421f-848d-08bf31ec4d01",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6043,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "671b8872-5a1d-4188-b683-909541196dc8",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Gauge,ACTUAL,SEARCHTYPE,B45) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Gauge,ACTUAL,SEARCHTYPE,B45) and submit the New Meter",
              "timedOut": null,
              "duration": 5888,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n//Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Gauge');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SEARCHTYPE');\nselectDropdownOption('unitOfMeasure', 'B45');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type(meterName, {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "33b68464-333c-4b9a-8381-7d6aaea4ea30",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 6952,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n//Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Gauge');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SEARCHTYPE');\nselectDropdownOption('unitOfMeasure', 'B45');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "67abcd10-7a7b-409d-931a-e79f7173128f",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6066,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "2c8643ba-14db-41ae-a97f-520bf7055a14",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Gauge,ACTUAL,SEARCHTYPE,B47) and submit the New Meter ",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Gauge,ACTUAL,SEARCHTYPE,B47) and submit the New Meter ",
              "timedOut": null,
              "duration": 5903,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n//Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Gauge');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SEARCHTYPE');\nselectDropdownOption('unitOfMeasure', 'B47');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type(meterName, {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "a36172fb-d18c-42fc-becc-be95e077e6a7",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 6973,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n//Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Gauge');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SEARCHTYPE');\nselectDropdownOption('unitOfMeasure', 'B47');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "a1fce8c1-76ae-4628-bf7d-ffaeb56c4b49",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6072,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "330768c2-6d31-4482-838f-9058bc8b2703",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Gauge,ACTUAL,SCRLAUNCHPNTTYPE,B34) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Gauge,ACTUAL,SCRLAUNCHPNTTYPE,B34) and submit the New Meter",
              "timedOut": null,
              "duration": 5837,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n//Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Gauge');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B34');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type(meterName, {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "ec778988-055e-4d37-85aa-160dd96aa9df",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 6987,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n//Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Gauge');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B34');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "d0cfbfbf-5009-4557-905d-5dd3ee4246c5",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6066,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "735d0e0b-ec07-4f9d-a744-b32743e5a455",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Gauge,ACTUAL,SCRLAUNCHPNTTYPE,B45) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Gauge,ACTUAL,SCRLAUNCHPNTTYPE,B45) and submit the New Meter",
              "timedOut": null,
              "duration": 5873,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n//Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Gauge');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B45');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type(meterName, {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "3e5162b5-b74c-4e0e-9369-7ebf51368ebd",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 6960,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Gauge');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B45');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "e5ca5b2c-6a67-40ad-a3cf-ba70598a19ad",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6069,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "acb8aa97-7964-406d-8fd1-53436bc4b013",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Gauge,ACTUAL,SCRLAUNCHPNTTYPE,B47) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Gauge,ACTUAL,SCRLAUNCHPNTTYPE,B47) and submit the New Meter",
              "timedOut": null,
              "duration": 5876,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n//Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Gauge');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B47');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type(meterName, {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "098ad9ca-bcf4-4224-84be-c31f90ea7eeb",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 6961,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Gauge');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B47');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "2d64491b-73f0-45f7-9500-ebbd85dd6049",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6066,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "90edbb22-bdca-4792-b553-380f12034103",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Gauge,DELTA,SEARCHTYPE,B34) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Gauge,DELTA,SEARCHTYPE,B34) and submit the New Meter",
              "timedOut": null,
              "duration": 5887,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n//Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Gauge');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SEARCHTYPE');\nselectDropdownOption('unitOfMeasure', 'B34');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type(meterName, {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "96bc666d-cb4a-4334-a37b-0a69f552bb0b",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 5967,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Gauge');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SEARCHTYPE');\nselectDropdownOption('unitOfMeasure', 'B34');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "6ad60aec-b55e-4507-999d-b42afd673d94",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6064,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "1d261b67-884d-4b0e-97d6-408eb7716a65",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Gauge,DELTA,SEARCHTYPE,B45) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Gauge,DELTA,SEARCHTYPE,B45) and submit the New Meter",
              "timedOut": null,
              "duration": 5889,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Gauge');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SEARCHTYPE');\nselectDropdownOption('unitOfMeasure', 'B45');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type(meterName, {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "5f33e312-3347-451e-bb1c-1cd4b90fb512",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 6960,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Gauge');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SEARCHTYPE');\nselectDropdownOption('unitOfMeasure', 'B45');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "e91d7831-54f0-40ca-bb12-749031c1c73e",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6069,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "048b35c2-1dee-4df2-aaa1-7f2462c8396f",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out ( Gauge,DELTA,SEARCHTYPE,B47) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out ( Gauge,DELTA,SEARCHTYPE,B47) and submit the New Meter",
              "timedOut": null,
              "duration": 5888,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n//Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Gauge');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SEARCHTYPE');\nselectDropdownOption('unitOfMeasure', 'B47');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type('SmartMeter_1234', {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "ebd165b1-9189-4e72-b30b-b66090dff374",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 6965,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Gauge');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SEARCHTYPE');\nselectDropdownOption('unitOfMeasure', 'B47');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "b0b0a962-4a03-4531-91b3-eb95ef64c359",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6070,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "3056a935-5d8e-447b-b725-c0e42f9297aa",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (10,Gauge,DELTA,SCRLAUNCHPNTTYPE,B34) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (10,Gauge,DELTA,SCRLAUNCHPNTTYPE,B34) and submit the New Meter",
              "timedOut": null,
              "duration": 5870,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Gauge');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B34');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type(meterName, {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "23c16aa9-746a-46a2-9134-6b9e77f67478",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 6967,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Gauge');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B34');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "a85ac927-7bd6-4404-9fa9-c83f8880ff27",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6078,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "aa393588-71ff-4a45-a703-d88f2e03b29d",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Gauge,DELTA,SCRLAUNCHPNTTYPE,B45) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Gauge,DELTA,SCRLAUNCHPNTTYPE,B45) and submit the New Meter",
              "timedOut": null,
              "duration": 5865,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Gauge');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B45');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type(meterName, {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "0f516c6c-c535-426c-8308-c1e39bba7b21",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 6976,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Gauge');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B45');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "e81bb857-6aca-4d12-9fa2-4f42d7739e1d",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6051,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "38004965-b9f1-4c3c-a170-53d60be503e7",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Gauge,DELTA,SCRLAUNCHPNTTYPE,B47) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Gauge,DELTA,SCRLAUNCHPNTTYPE,B47) and submit the New Meter",
              "timedOut": null,
              "duration": 5888,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Gauge');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B47');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type(meterName, {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "8579463e-8d25-42ab-89a1-94f2b4f080f0",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 6959,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Gauge');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B47');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "70334683-f738-4000-8d19-9cd29ef65a0e",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6058,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "dac57716-abbf-4917-9ba1-48d8e94e3212",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Continuous,ACTUAL,SEARCHTYPE,B34) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Continuous,ACTUAL,SEARCHTYPE,B34) and submit the New Meter",
              "timedOut": null,
              "duration": 5880,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n//Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Continuous');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SEARCHTYPE');\nselectDropdownOption('unitOfMeasure', 'B34');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type(meterName, {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "804a3e6c-faa3-4dec-b9fc-58ed81de48e1",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 5966,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Continuous');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SEARCHTYPE');\nselectDropdownOption('unitOfMeasure', 'B34');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "ffae9b1d-4081-469d-9570-dfa5f4f6c015",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6074,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "af6ec759-f708-4629-81c6-7cf675dbb9c2",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Continuous,ACTUAL,SEARCHTYPE,B45) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Continuous,ACTUAL,SEARCHTYPE,B45) and submit the New Meter",
              "timedOut": null,
              "duration": 5870,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n//Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Continuous');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SEARCHTYPE');\nselectDropdownOption('unitOfMeasure', 'B45');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type('SmartMeter_1234', {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "2563e912-0f80-476f-898b-a3541f999c79",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 6976,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Continuous');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SEARCHTYPE');\nselectDropdownOption('unitOfMeasure', 'B45');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "1edc292d-4c55-4450-9c70-31285de8a29c",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6069,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "8a81726f-eaeb-40ec-97b7-872a66eff2df",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Gauge,DELTA,SCRLAUNCHPNTTYPE,B34) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Gauge,DELTA,SCRLAUNCHPNTTYPE,B34) and submit the New Meter",
              "timedOut": null,
              "duration": 5900,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Continuous');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SEARCHTYPE');\nselectDropdownOption('unitOfMeasure', 'B47');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type(meterName, {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "8985a133-2253-4cb2-b8b8-9d503e26d470",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 6940,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Continuous');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SEARCHTYPE');\nselectDropdownOption('unitOfMeasure', 'B47');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "7d3c7754-8d21-47db-9c2d-74007a57b6cd",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6078,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "54e96209-3082-4cb6-8b2a-c87c498fb49f",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Continuous,ACTUAL,SCRLAUNCHPNTTYPE,B34) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Continuous,ACTUAL,SCRLAUNCHPNTTYPE,B34) and submit the New Meter",
              "timedOut": null,
              "duration": 5868,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Continuous');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B34');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type(meterName, {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "365165dd-6bd3-498a-9897-69b3395148db",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 5974,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Continuous');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B34');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "d6c3537b-2661-4069-874b-5e80337c8e78",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6064,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "fa631197-ee35-48d0-bdbe-ef28eb20a8cc",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Continuous,ACTUAL,SCRLAUNCHPNTTYPE,B45) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Continuous,ACTUAL,SCRLAUNCHPNTTYPE,B45) and submit the New Meter",
              "timedOut": null,
              "duration": 5877,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Continuous');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B45');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type(meterName, {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "cebb589d-083f-4001-bda2-41862a00b650",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 6965,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Continuous');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B45');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "cfe5921a-6258-4f96-9a48-8d6f628ba40c",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6073,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "b59f70e8-e33e-4fa3-84bf-97c4947a7ac3",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Continuous,ACTUAL,SCRLAUNCHPNTTYPE,B47) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Continuous,ACTUAL,SCRLAUNCHPNTTYPE,B47) and submit the New Meter",
              "timedOut": null,
              "duration": 5888,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n//Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Continuous');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B47');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type(meterName, {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "4c3a8c45-666a-4e0d-9aa6-2be67b00802c",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 6959,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n//Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Continuous');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B47');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "4afc7801-074c-4b3c-81f8-f6966e436412",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6072,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "fed21acc-45de-449d-8375-949bc4965f19",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Continuous,DELTA,SEARCHTYPE,B34) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Continuous,DELTA,SEARCHTYPE,B34) and submit the New Meter",
              "timedOut": null,
              "duration": 5874,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n//Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Continuous');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SEARCHTYPE');\nselectDropdownOption('unitOfMeasure', 'B34');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type(meterName, {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "1768dc3d-5ebc-4ca7-a875-ec7f0dc594b1",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 6985,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Continuous');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SEARCHTYPE');\nselectDropdownOption('unitOfMeasure', 'B34');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "6997629d-879a-4954-8eab-39eecb2e5a93",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6062,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "d0c368f0-8224-47c8-a14f-2dae939d8ebc",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Continuous,DELTA,SEARCHTYPE,B45) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Continuous,DELTA,SEARCHTYPE,B45) and submit the New Meter",
              "timedOut": null,
              "duration": 5871,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n//Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Continuous');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SEARCHTYPE');\nselectDropdownOption('unitOfMeasure', 'B45');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type(meterName, {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "2a044cf6-6429-4127-a21a-e73c8a03de77",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 5977,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n//Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Continuous');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SEARCHTYPE');\nselectDropdownOption('unitOfMeasure', 'B45');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "6ad69f58-9731-4261-9a87-c64ae1f3cdd9",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6050,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "d822944c-4463-4629-a6e2-ce6727a4b51c",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Continuous,DELTA,SEARCHTYPE,B47) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Continuous,DELTA,SEARCHTYPE,B47) and submit the New Meter",
              "timedOut": null,
              "duration": 5895,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n//Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Continuous');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SEARCHTYPE');\nselectDropdownOption('unitOfMeasure', 'B47');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type(meterName, {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "6cbad077-3a61-426f-a468-7b624a720ca8",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 6980,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Continuous');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SEARCHTYPE');\nselectDropdownOption('unitOfMeasure', 'B47');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "ba15ec15-951b-414a-9328-ddce09fdf4f6",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6060,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "6dbb7162-76d3-4e7d-bd21-93673b55716b",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Continuous,DELTA,SCRLAUNCHPNTTYPE,B34) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Continuous,DELTA,SCRLAUNCHPNTTYPE,B34) and submit the New Meter",
              "timedOut": null,
              "duration": 5889,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Continuous');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B34');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type('SmartMeter_1234', {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "dd9b93a5-b5d8-4e6f-b1e9-079d585332c6",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 6955,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Continuous');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B34');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "a64be9cf-6b73-4157-b3da-f30698d84bb8",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6079,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "6898571a-245a-40b8-985c-6734299b4424",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Continuous,DELTA,SCRLAUNCHPNTTYPE,B45) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Continuous,DELTA,SCRLAUNCHPNTTYPE,B45) and submit the New Meter",
              "timedOut": null,
              "duration": 5874,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Continuous');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B45');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type(meterName, {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "29ff0266-16a3-40dc-9862-959927326264",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 5963,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Continuous');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B45');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "b6d8b6ad-34f0-4af9-909d-fe1e4dcf322f",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6076,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "300cdf5c-ea8d-4d9b-be15-a9041c2e834f",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Continuous,DELTA,SCRLAUNCHPNTTYPE,B47) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Continuous,DELTA,SCRLAUNCHPNTTYPE,B47) and submit the New Meter",
              "timedOut": null,
              "duration": 5866,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\nselectDropdownOption('meterType', 'Continuous');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B47');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type(meterName, {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "374e2e10-bda3-44a0-b0de-5c6143dd5367",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 5986,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Continuous');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B47');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "41609f32-1106-40d1-a9bf-484982a70605",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6058,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "01ea9a0b-a960-4b8f-b865-825e0d26f39e",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Characteristic,ACTUAL,SEARCHTYPE,B34) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Characteristic,ACTUAL,SEARCHTYPE,B34) and submit the New Meter",
              "timedOut": null,
              "duration": 5886,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n//Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Characteristic');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SEARCHTYPE');\nselectDropdownOption('unitOfMeasure', 'B34');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type(meterName, {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "6d1ae205-4477-427d-a4a7-258ba56b4fae",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 6970,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Characteristic');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SEARCHTYPE');\nselectDropdownOption('unitOfMeasure', 'B34');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "cd466e64-2f41-4009-bd16-4bbe8d098710",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6054,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "e4de9bee-6b4d-4100-9741-048787123c52",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Characteristic,ACTUAL,SEARCHTYPE,B45) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Characteristic,ACTUAL,SEARCHTYPE,B45) and submit the New Meter",
              "timedOut": null,
              "duration": 5873,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n//Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Characteristic');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SEARCHTYPE');\nselectDropdownOption('unitOfMeasure', 'B45');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type('SmartMeter_1234', {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "e8abf50f-154f-4840-9574-bb283ded8e32",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 5981,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Characteristic');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SEARCHTYPE');\nselectDropdownOption('unitOfMeasure', 'B45');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "8adcef26-3c13-49bf-ad63-98d01e752229",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6061,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "4a6b0462-e057-404a-836f-6bc17f7027b6",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Characteristic,ACTUAL,SEARCHTYPE,B47) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Characteristic,ACTUAL,SEARCHTYPE,B47) and submit the New Meter",
              "timedOut": null,
              "duration": 5888,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n//Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Characteristic');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SEARCHTYPE');\nselectDropdownOption('unitOfMeasure', 'B47');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type('SmartMeter_1234', {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "22bb4883-828a-451e-b78d-a0d3f9eecad7",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 6964,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Characteristic');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SEARCHTYPE');\nselectDropdownOption('unitOfMeasure', 'B47');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "6a9b7018-0d20-4073-9861-2d788823f0c2",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6060,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "246d71a6-e56b-40f1-8d8c-d6a4ab2d22f2",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Characteristic,ACTUAL,SCRLAUNCHPNTTYPE,B34) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Characteristic,ACTUAL,SCRLAUNCHPNTTYPE,B34) and submit the New Meter",
              "timedOut": null,
              "duration": 5881,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n//Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Characteristic');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B34');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type('SmartMeter_1234', {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "48a49e4f-8d72-4a33-a744-87aca59bf4c3",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 6981,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Characteristic');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B34');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "89b77d28-b5a0-4eb4-8f83-9c3af98eddcc",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6055,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "31be002a-4a5a-4a80-a537-a391dfe44578",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Characteristic,ACTUAL,SCRLAUNCHPNTTYPE,B45) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Characteristic,ACTUAL,SCRLAUNCHPNTTYPE,B45) and submit the New Meter",
              "timedOut": null,
              "duration": 5880,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n//Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Characteristic');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B45');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type(meterName, {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "453110e2-b91d-445f-9e10-7bd24b6a6144",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 6954,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Characteristic');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B45');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "b3d299e3-4812-4517-992b-8b2ee8bea828",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6078,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "aa60919d-1324-42df-8ed9-87901bd9e026",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Characteristic,ACTUAL,SCRLAUNCHPNTTYPE,B47) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Characteristic,ACTUAL,SCRLAUNCHPNTTYPE,B47) and submit the New Meter",
              "timedOut": null,
              "duration": 5848,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Characteristic');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B47');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type(meterName, {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "5c6d25eb-007b-4997-98d9-08fde8422291",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 6970,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Characteristic');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B47');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "db46999c-2660-4dde-bcea-bddc64f46386",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6072,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "6d7a18f0-dfa0-4246-b4e8-7b77537b9d85",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Characteristic,DELTA,SEARCHTYPE,B34) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Characteristic,DELTA,SEARCHTYPE,B34) and submit the New Meter",
              "timedOut": null,
              "duration": 6525,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n//Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'DELTA');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B34');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type('SmartMeter_1234', {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'DELTA' within the element: <div#react-select-2-option-2.css-1r7gmqd-option> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'DELTA' within the element: <div#react-select-2-option-2.css-1r7gmqd-option> but never did.\n    at selectDropdownOption (webpack://cypress/./cypress/e2e/MetersAndGroup/submit_positive_case.cy.js:2308:5)\n    at Context.eval (webpack://cypress/./cypress/e2e/MetersAndGroup/submit_positive_case.cy.js:1816:4)",
                "diff": null
              },
              "uuid": "3edd95d8-fd7c-410e-a3dd-578e99722e04",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 5435,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'DELTA');\nselectDropdownOption('readingType', 'ACTUAL');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B34');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'SmartMeter6246' within the element: <td.px-3.py-3.w-[150px]> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'SmartMeter6246' within the element: <td.px-3.py-3.w-[150px]> but never did.\n    at handleFlow (webpack://cypress/./cypress/e2e/MetersAndGroup/submit_positive_case.cy.js:2338:9)\n    at Context.eval (webpack://cypress/./cypress/e2e/MetersAndGroup/submit_positive_case.cy.js:1842:4)",
                "diff": null
              },
              "uuid": "7defa7c8-b278-4a05-80dd-bfd242795619",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6999,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'updateSmartMeter6246' within the element: <div.css-1nmdiq5-menu> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'updateSmartMeter6246' within the element: <div.css-1nmdiq5-menu> but never did.\n    at handleFlow (webpack://cypress/./cypress/e2e/MetersAndGroup/submit_positive_case.cy.js:2383:9)\n    at Context.eval (webpack://cypress/./cypress/e2e/MetersAndGroup/submit_positive_case.cy.js:1859:4)",
                "diff": null
              },
              "uuid": "8338efb0-bbbd-4cb6-8fb5-b34e704a73d2",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Characteristic,DELTA,SEARCHTYPE,B45) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Characteristic,DELTA,SEARCHTYPE,B45) and submit the New Meter",
              "timedOut": null,
              "duration": 6209,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Characteristic');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B45');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type(meterName, {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "f84a8b1e-25af-4fb2-adad-285d6b48704a",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 6956,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Characteristic');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B45');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "5278e448-ec80-47aa-9654-2acd5d2df7b9",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6065,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "7855a2cb-9e22-4c35-b7d6-32b941ef34fe",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Characteristic,DELTA,SEARCHTYPE,B47) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Characteristic,DELTA,SEARCHTYPE,B47) and submit the New Meter",
              "timedOut": null,
              "duration": 5862,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n//Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Characteristic');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B47');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type(meterName, {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "6543c655-5e05-4883-ab1e-c72cc2373e9f",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 6949,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Characteristic');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B47');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "713eb56b-0391-48bd-8f9a-1d1d2a15023c",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6074,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "acfb12ce-2bc5-485b-81d4-caf4110636f7",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Characteristic,DELTA,SCRLAUNCHPNTTYPE,B34) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Characteristic,DELTA,SCRLAUNCHPNTTYPE,B34) and submit the New Meter",
              "timedOut": null,
              "duration": 5855,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Characteristic');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B34');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type(meterName, {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "3178b31a-97d7-4b3b-9350-8f6d48cc1e86",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 6962,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Characteristic');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B34');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "953f36f5-61af-4fc8-8acb-945b173d094e",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6062,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "ca4c0901-25fd-4548-8749-ef163d11aa64",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Characteristic,DELTA,SCRLAUNCHPNTTYPE,B45) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Characteristic,DELTA,SCRLAUNCHPNTTYPE,B45) and submit the New Meter",
              "timedOut": null,
              "duration": 5876,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n//Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Characteristic');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B45');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type(meterName, {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "5875a62f-2421-4633-a1d8-38cc5928b596",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 6969,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Characteristic');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B45');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "bf185db8-d7b9-4abc-bf8b-3eb6a49bb1b4",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6060,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "cb9569b3-bb8c-407b-b7fe-f18b28a59739",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to fill out (Characteristic,DELTA,SCRLAUNCHPNTTYPE,B47) and submit the New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to fill out (Characteristic,DELTA,SCRLAUNCHPNTTYPE,B47) and submit the New Meter",
              "timedOut": null,
              "duration": 5840,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Add', meterName, meterdescription);\n//Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Characteristic');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B47');\nsubmitMeter(true); // Call the submitMeter function\n// Assert \"SmartMeter_1234\" is inside the span\ncy.get('input[placeholder=\"Search\"]').eq(0).type(meterName, {\n  force: true\n});\n// assert the table row contains SmartMeter_1234\ncy.get('tbody').find('tr').should('have.length.greaterThan', 0).contains('td', meterName);\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "2816012e-8108-40c9-9659-d6260a335aa0",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to update New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to update New Meter",
              "timedOut": null,
              "duration": 6962,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Update', meterName, meterdescription);\n// Select dropdown options for New Meter creation\nselectDropdownOption('meterType', 'Characteristic');\nselectDropdownOption('readingType', 'DELTA');\nselectDropdownOption('domain', 'SCRLAUNCHPNTTYPE');\nselectDropdownOption('unitOfMeasure', 'B47');\nsubmitMeter(true); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "183bb490-f398-40e2-9b3a-f6c5e478a049",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should allow users to Delete New Meter",
              "fullTitle": "Meters & Group Module New Meter Should allow users to Delete New Meter",
              "timedOut": null,
              "duration": 6059,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "meterandgroupmodule(); // Call the meterandgroupmodule function\n// Perform the Update action\nhandleFlow('Delete', meterName, meterdescription);\ndeleteMeter(false); // Call the submitMeter function\nlogout(); // Call the logout function",
              "err": {},
              "uuid": "a0ce9b95-006d-4159-9a9c-faa06b6cbabe",
              "parentUUID": "1e745839-b999-45f6-a895-5905af80354f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0c78b16a-fe70-4f4c-8557-ffb498cd2eba",
            "014029f6-762d-421f-848d-08bf31ec4d01",
            "671b8872-5a1d-4188-b683-909541196dc8",
            "33b68464-333c-4b9a-8381-7d6aaea4ea30",
            "67abcd10-7a7b-409d-931a-e79f7173128f",
            "2c8643ba-14db-41ae-a97f-520bf7055a14",
            "a36172fb-d18c-42fc-becc-be95e077e6a7",
            "a1fce8c1-76ae-4628-bf7d-ffaeb56c4b49",
            "330768c2-6d31-4482-838f-9058bc8b2703",
            "ec778988-055e-4d37-85aa-160dd96aa9df",
            "d0cfbfbf-5009-4557-905d-5dd3ee4246c5",
            "735d0e0b-ec07-4f9d-a744-b32743e5a455",
            "3e5162b5-b74c-4e0e-9369-7ebf51368ebd",
            "e5ca5b2c-6a67-40ad-a3cf-ba70598a19ad",
            "acb8aa97-7964-406d-8fd1-53436bc4b013",
            "098ad9ca-bcf4-4224-84be-c31f90ea7eeb",
            "2d64491b-73f0-45f7-9500-ebbd85dd6049",
            "90edbb22-bdca-4792-b553-380f12034103",
            "96bc666d-cb4a-4334-a37b-0a69f552bb0b",
            "6ad60aec-b55e-4507-999d-b42afd673d94",
            "1d261b67-884d-4b0e-97d6-408eb7716a65",
            "5f33e312-3347-451e-bb1c-1cd4b90fb512",
            "e91d7831-54f0-40ca-bb12-749031c1c73e",
            "048b35c2-1dee-4df2-aaa1-7f2462c8396f",
            "ebd165b1-9189-4e72-b30b-b66090dff374",
            "b0b0a962-4a03-4531-91b3-eb95ef64c359",
            "3056a935-5d8e-447b-b725-c0e42f9297aa",
            "23c16aa9-746a-46a2-9134-6b9e77f67478",
            "a85ac927-7bd6-4404-9fa9-c83f8880ff27",
            "aa393588-71ff-4a45-a703-d88f2e03b29d",
            "0f516c6c-c535-426c-8308-c1e39bba7b21",
            "e81bb857-6aca-4d12-9fa2-4f42d7739e1d",
            "38004965-b9f1-4c3c-a170-53d60be503e7",
            "8579463e-8d25-42ab-89a1-94f2b4f080f0",
            "70334683-f738-4000-8d19-9cd29ef65a0e",
            "dac57716-abbf-4917-9ba1-48d8e94e3212",
            "804a3e6c-faa3-4dec-b9fc-58ed81de48e1",
            "ffae9b1d-4081-469d-9570-dfa5f4f6c015",
            "af6ec759-f708-4629-81c6-7cf675dbb9c2",
            "2563e912-0f80-476f-898b-a3541f999c79",
            "1edc292d-4c55-4450-9c70-31285de8a29c",
            "8a81726f-eaeb-40ec-97b7-872a66eff2df",
            "8985a133-2253-4cb2-b8b8-9d503e26d470",
            "7d3c7754-8d21-47db-9c2d-74007a57b6cd",
            "54e96209-3082-4cb6-8b2a-c87c498fb49f",
            "365165dd-6bd3-498a-9897-69b3395148db",
            "d6c3537b-2661-4069-874b-5e80337c8e78",
            "fa631197-ee35-48d0-bdbe-ef28eb20a8cc",
            "cebb589d-083f-4001-bda2-41862a00b650",
            "cfe5921a-6258-4f96-9a48-8d6f628ba40c",
            "b59f70e8-e33e-4fa3-84bf-97c4947a7ac3",
            "4c3a8c45-666a-4e0d-9aa6-2be67b00802c",
            "4afc7801-074c-4b3c-81f8-f6966e436412",
            "fed21acc-45de-449d-8375-949bc4965f19",
            "1768dc3d-5ebc-4ca7-a875-ec7f0dc594b1",
            "6997629d-879a-4954-8eab-39eecb2e5a93",
            "d0c368f0-8224-47c8-a14f-2dae939d8ebc",
            "2a044cf6-6429-4127-a21a-e73c8a03de77",
            "6ad69f58-9731-4261-9a87-c64ae1f3cdd9",
            "d822944c-4463-4629-a6e2-ce6727a4b51c",
            "6cbad077-3a61-426f-a468-7b624a720ca8",
            "ba15ec15-951b-414a-9328-ddce09fdf4f6",
            "6dbb7162-76d3-4e7d-bd21-93673b55716b",
            "dd9b93a5-b5d8-4e6f-b1e9-079d585332c6",
            "a64be9cf-6b73-4157-b3da-f30698d84bb8",
            "6898571a-245a-40b8-985c-6734299b4424",
            "29ff0266-16a3-40dc-9862-959927326264",
            "b6d8b6ad-34f0-4af9-909d-fe1e4dcf322f",
            "300cdf5c-ea8d-4d9b-be15-a9041c2e834f",
            "374e2e10-bda3-44a0-b0de-5c6143dd5367",
            "41609f32-1106-40d1-a9bf-484982a70605",
            "01ea9a0b-a960-4b8f-b865-825e0d26f39e",
            "6d1ae205-4477-427d-a4a7-258ba56b4fae",
            "cd466e64-2f41-4009-bd16-4bbe8d098710",
            "e4de9bee-6b4d-4100-9741-048787123c52",
            "e8abf50f-154f-4840-9574-bb283ded8e32",
            "8adcef26-3c13-49bf-ad63-98d01e752229",
            "4a6b0462-e057-404a-836f-6bc17f7027b6",
            "22bb4883-828a-451e-b78d-a0d3f9eecad7",
            "6a9b7018-0d20-4073-9861-2d788823f0c2",
            "246d71a6-e56b-40f1-8d8c-d6a4ab2d22f2",
            "48a49e4f-8d72-4a33-a744-87aca59bf4c3",
            "89b77d28-b5a0-4eb4-8f83-9c3af98eddcc",
            "31be002a-4a5a-4a80-a537-a391dfe44578",
            "453110e2-b91d-445f-9e10-7bd24b6a6144",
            "b3d299e3-4812-4517-992b-8b2ee8bea828",
            "aa60919d-1324-42df-8ed9-87901bd9e026",
            "5c6d25eb-007b-4997-98d9-08fde8422291",
            "db46999c-2660-4dde-bcea-bddc64f46386",
            "6d7a18f0-dfa0-4246-b4e8-7b77537b9d85",
            "f84a8b1e-25af-4fb2-adad-285d6b48704a",
            "5278e448-ec80-47aa-9654-2acd5d2df7b9",
            "7855a2cb-9e22-4c35-b7d6-32b941ef34fe",
            "6543c655-5e05-4883-ab1e-c72cc2373e9f",
            "713eb56b-0391-48bd-8f9a-1d1d2a15023c",
            "acfb12ce-2bc5-485b-81d4-caf4110636f7",
            "3178b31a-97d7-4b3b-9350-8f6d48cc1e86",
            "953f36f5-61af-4fc8-8acb-945b173d094e",
            "ca4c0901-25fd-4548-8749-ef163d11aa64",
            "5875a62f-2421-4633-a1d8-38cc5928b596",
            "bf185db8-d7b9-4abc-bf8b-3eb6a49bb1b4",
            "cb9569b3-bb8c-407b-b7fe-f18b28a59739",
            "2816012e-8108-40c9-9659-d6260a335aa0",
            "183bb490-f398-40e2-9b3a-f6c5e478a049",
            "a0ce9b95-006d-4159-9a9c-faa06b6cbabe"
          ],
          "failures": [
            "3edd95d8-fd7c-410e-a3dd-578e99722e04",
            "7defa7c8-b278-4a05-80dd-bfd242795619",
            "8338efb0-bbbd-4cb6-8fb5-b34e704a73d2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 673828,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}